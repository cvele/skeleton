# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Creating alias for auth checker
    Symfony\Component\Security\Core\Authorization\AuthorizationChecker: '@security.authorization_checker'
    App\Service\Security\UserManagerInterface: '@App\Service\Security\UserManager'
    App\Service\Security\UserManager:
        class: App\Service\Security\UserManager
    App\Service\Security\PasswordUpdaterInterface: '@App\Service\Security\PasswordUpdater'
    App\Service\Security\PasswordUpdater:
        class: App\Service\Security\PasswordUpdater
    App\Service\CanonicalizerInterface: '@App\Service\Canonicalizer'
    App\Service\Canonicalizer:
        class: App\Service\Canonicalizer
    App\Service\TokenGeneratorInterface: '@App\Service\TokenGenerator'
    App\Service\TokenGenerator:
        class: App\Service\TokenGenerator

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]
